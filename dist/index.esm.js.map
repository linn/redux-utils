{"version":3,"file":"index.esm.js","sources":["../src/actions/makeActionTypes.js","../src/actions/makeReportActionTypes.js","../src/actions/makeProcessActionTypes.js","../src/actions/rsaaTypes.js","../src/actions/FetchApiActions.js","../src/actions/ProcessActions.js","../src/actions/ReportActions.js","../src/actions/UpdateApiActions.js","../src/actions/StateApiActions.js","../src/actions/index.js","../src/actions/fetchNews.js","../src/actions/markNotificationSeen.js","../src/actions/fetchMenu.js","../src/utilities/index.js","../src/reducers/reducerFactories/collectionStoreFactory.js","../src/reducers/reducerFactories/collectionWithLinksStoreFactory.js","../src/reducers/reducerFactories/processStoreFactory.js","../src/reducers/reducerFactories/itemStoreFactory.js","../src/reducers/reducerFactories/reportOptionsFactory.js","../src/reducers/reducerFactories/reportResultsFactory.js","../src/reducers/reducerFactories/reportsResultsFactory.js","../src/reducers/reducerFactories/fetchErrorReducerFactory.js","../src/reducers/menu.js","../src/reducers/news.js","../src/types/ItemType.js","../index.js"],"sourcesContent":["const makeActionTypes = (entityType, makeAll = true, makeDelete = false) => {\n    const types = {};\n    types[`REQUEST_${entityType}`] = `REQUEST_${entityType}`;\n    types[`REQUEST_APPLICATION_STATE_${entityType}`] = `REQUEST_APPLICATION_STATE_${entityType}`;\n    types[`RECEIVE_${entityType}`] = `RECEIVE_${entityType}`;\n    types[`RECEIVE_APPLICATION_STATE_${entityType}`] = `RECEIVE_APPLICATION_STATE_${entityType}`;\n    types[`REQUEST_SEARCH_${entityType}`] = `REQUEST_SEARCH_${entityType}`;\n    types[`RECEIVE_SEARCH_${entityType}`] = `RECEIVE_SEARCH_${entityType}`;\n    types[`CLEAR_SEARCH_${entityType}`] = `CLEAR_SEARCH_${entityType}`;\n    types[`FETCH_${entityType}_ERROR`] = `FETCH_${entityType}_ERROR`;\n    types[`CLEAR_${entityType}_ERRORS`] = `CLEAR_${entityType}_ERRORS`;\n    types[`CLEAR_${entityType}_DATA`] = `CLEAR_${entityType}_DATA`;\n\n    if (makeAll) {\n        types[`REQUEST_ADD_${entityType}`] = `REQUEST_ADD_${entityType}`;\n        types[`REQUEST_CREATE_${entityType}`] = `REQUEST_CREATE_${entityType}`;\n        types[`REQUEST_UPDATE_${entityType}`] = `REQUEST_UPDATE_${entityType}`;\n        types[`RECEIVE_UPDATED_${entityType}`] = `RECEIVE_UPDATED_${entityType}`;\n        types[`REQUEST_PATCH_${entityType}`] = `REQUEST_PATCH_${entityType}`;\n        types[`RECEIVE_PATCH_${entityType}`] = `RECEIVE_PATCH_${entityType}`;\n        types[`RESET_${entityType}`] = `RESET_${entityType}`;\n        types[`RECEIVE_NEW_${entityType}`] = `RECEIVE_NEW_${entityType}`;\n        types[`SET_${entityType}_EDIT_STATUS`] = `SET_${entityType}_EDIT_STATUS`;\n        types[`SHOW_${entityType}_SNACKBAR`] = `SHOW_${entityType}_SNACKBAR`;\n        types[`HIDE_${entityType}_SNACKBAR`] = `HIDE_${entityType}_SNACKBAR`;\n        types[`REQUEST_POST_${entityType}`] = `REQUEST_POST_${entityType}`;\n        types[`RECEIVE_POST_${entityType}`] = `RECEIVE_POST_${entityType}`;\n    }\n\n    if (makeDelete) {\n        types[`REQUEST_DELETE_${entityType}`] = `REQUEST_DELETE_${entityType}`;\n        types[`RECEIVE_DELETED_${entityType}`] = `RECEIVE_DELETED_${entityType}`;\n    }\n\n    return types;\n};\n\nexport default makeActionTypes;\n","const makeReportActionTypes = entityType => {\n    const types = {};\n    types[`REQUEST_${entityType}`] = `REQUEST_${entityType}`;\n    types[`RECEIVE_${entityType}`] = `RECEIVE_${entityType}`;\n    types[`FETCH_${entityType}_ERROR`] = `FETCH_${entityType}_ERROR`;\n    types[`CLEAR_${entityType}_ERRORS`] = `CLEAR_${entityType}_ERRORS`;\n\n    return types;\n};\n\nexport default makeReportActionTypes;\n","const makeProcessActionTypes = entityType => {\n    const types = {};\n    types[`REQUEST_${entityType}`] = `REQUEST_${entityType}`;\n    types[`RECEIVE_${entityType}`] = `RECEIVE_${entityType}`;\n    types[`SHOW_${entityType}_MESSAGE`] = `SHOW_${entityType}_MESSAGE`;\n    types[`HIDE_${entityType}_MESSAGE`] = `HIDE_${entityType}_MESSAGE`;\n    types[`FETCH_${entityType}_ERROR`] = `FETCH_${entityType}_ERROR`;\n    types[`CLEAR_${entityType}_ERRORS`] = `CLEAR_${entityType}_ERRORS`;\n    types[`CLEAR_${entityType}_DATA`] = `CLEAR_${entityType}_DATA`;\n\n    return types;\n};\n\nexport default makeProcessActionTypes;\n","const successPayload = itemName => async (action, state, res) => ({\n    data: await res.json(),\n    item: itemName\n});\n\nexport const requested = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const requestedState = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_APPLICATION_STATE_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const requestAdd = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_ADD_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const requestUpdate = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_UPDATE_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const requestDelete = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_DELETE_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const receiveUpdated = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_UPDATED_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const received = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const receivedState = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_APPLICATION_STATE_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const receiveAdded = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_NEW_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const receivedProcess = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const receiveDeleted = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_DELETED_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const requestSearch = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_SEARCH_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const requestReport = (actionTypes, actionTypeRoot, options) => ({\n    type: actionTypes[`REQUEST_${actionTypeRoot}`],\n    payload: { options }\n});\n\nexport const receiveSearch = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_SEARCH_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const requestPost = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_POST_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const receivePost = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_POST_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const requestPatch = (actionTypes, actionTypeRoot) => ({\n    type: actionTypes[`REQUEST_PATCH_${actionTypeRoot}`],\n    payload: {}\n});\n\nexport const receivePatch = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`RECEIVE_PATCH_${actionTypeRoot}`],\n    payload: successPayload(itemName)\n});\n\nexport const error = (actionTypes, actionTypeRoot, itemName) => ({\n    type: actionTypes[`FETCH_${actionTypeRoot}_ERROR`],\n    payload: async (action, state, res) =>\n        res\n            ? {\n                  error: {\n                      status: res.status,\n                      statusText: `Error - ${res.status} ${res.statusText}`,\n                      details: await res.json(),\n                      item: itemName\n                  }\n              }\n            : `Network request failed`\n});\n","ï»¿import { RSAA } from 'redux-api-middleware';\nimport * as rsaaTypes from './rsaaTypes';\n\nexport default function FetchApiActions(\n    itemName,\n    actionTypeRoot,\n    uri,\n    actionTypes,\n    appRoot,\n    accept\n) {\n    this.fetch = () => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchById = id => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${id}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchByPath = (id, path) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${id}/${path}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchPage = (pageNumber, rowsPerPage) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${pageNumber}/${rowsPerPage}`,\n            method: 'GET',\n            options: { requires: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchSortedPage = (pageNumber, rowsPerPage, sortBy, asc) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${pageNumber}/${rowsPerPage}/${sortBy}/${asc}`,\n            method: 'GET',\n            options: { requires: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.search = searchTerm => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}?searchTerm=${searchTerm}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requestSearch(actionTypes, actionTypeRoot),\n                rsaaTypes.receiveSearch(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.searchWithOptions = (searchTerm, options) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}?searchTerm=${searchTerm}${options}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requestSearch(actionTypes, actionTypeRoot),\n                rsaaTypes.receiveSearch(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.clearSearch = () => ({\n        type: actionTypes[`CLEAR_SEARCH_${actionTypeRoot}`],\n        payload: {}\n    });\n\n    this.clearItems = () => ({\n        type: actionTypes[`CLEAR_${actionTypeRoot}_DATA`],\n        payload: {}\n    });\n\n    this.fetchState = () => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/application-state`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/vnd.linn.application-state+json;version=1'\n            },\n            types: [\n                rsaaTypes.requestedState(actionTypes, actionTypeRoot),\n                rsaaTypes.receivedState(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n}\n","ï»¿import { RSAA } from 'redux-api-middleware';\nimport * as rsaaTypes from './rsaaTypes';\n\nexport default function ProcessActions(\n    itemName,\n    actionTypeRoot,\n    uri,\n    actionTypes,\n    appRoot,\n    contentType = 'application/json'\n) {\n    this.requestProcessStart = (body, options = null) => {\n        const makeBody = () => {\n            if (!body) return '';\n            if (contentType === 'application/json') {\n                return JSON.stringify(body);\n            }\n            return body;\n        };\n\n        const makeEndpoint = () => {\n            let endpoint = `${appRoot}${uri}`;\n            if (options) {\n                const query = new URLSearchParams(options).toString();\n                endpoint += `?${query}`;\n            }\n            return endpoint;\n        };\n\n        return {\n            [RSAA]: {\n                endpoint: makeEndpoint(),\n                method: 'POST',\n                options: { requiresAuth: true },\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': contentType\n                },\n                body: makeBody(body),\n                types: [\n                    rsaaTypes.requested(actionTypes, actionTypeRoot),\n                    rsaaTypes.receivedProcess(actionTypes, actionTypeRoot, itemName),\n                    rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n                ]\n            }\n        };\n    };\n\n    this.setMessageVisible = visible => {\n        if (visible === true) {\n            return {\n                type: actionTypes[`SHOW_${actionTypeRoot}_MESSAGE`],\n                payload: {}\n            };\n        }\n        return {\n            type: actionTypes[`HIDE_${actionTypeRoot}_MESSAGE`],\n            payload: {}\n        };\n    };\n\n    this.clearErrorsForItem = () => ({\n        type: actionTypes[`CLEAR_${actionTypeRoot}_ERRORS`],\n        payload: { item: itemName }\n    });\n\n    this.clearProcessData = () => ({\n        type: actionTypes[`CLEAR_${actionTypeRoot}_DATA`],\n        payload: {}\n    });\n}\n","ï»¿import { RSAA } from 'redux-api-middleware';\nimport * as rsaaTypes from './rsaaTypes';\n\nexport default function ReportActions(reportName, actionTypeRoot, uri, actionTypes, appRoot) {\n    this.fetchReport = options => {\n        const endpoint = options\n            ? `${appRoot}${uri}?${new URLSearchParams(options).toString()}`\n            : `${appRoot}${uri}`;\n\n        return {\n            [RSAA]: {\n                endpoint,\n                method: 'GET',\n                options: { requiresAuth: true },\n                headers: {\n                    Accept: 'application/json'\n                },\n                types: [\n                    rsaaTypes.requestReport(actionTypes, actionTypeRoot, options),\n                    rsaaTypes.received(actionTypes, actionTypeRoot, reportName),\n                    rsaaTypes.error(actionTypes, actionTypeRoot, reportName)\n                ]\n            }\n        };\n    };\n}\n","ï»¿import { RSAA } from 'redux-api-middleware';\nimport * as rsaaTypes from './rsaaTypes';\n\nexport default function UpdateApiActions(\n    itemName,\n    actionTypeRoot,\n    uri,\n    actionTypes,\n    appRoot,\n    accept\n) {\n    this.fetch = id => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${id}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchByHref = href => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${href}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchByPath = (id, path) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${id}/${path}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.fetchByQueryString = (queryString, id) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}?${queryString}=${id}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json'\n            },\n            types: [\n                rsaaTypes.requested(actionTypes, actionTypeRoot),\n                rsaaTypes.received(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.add = item => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}`,\n            method: 'POST',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n            types: [\n                rsaaTypes.requestAdd(actionTypes, actionTypeRoot),\n                rsaaTypes.receiveAdded(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.update = (id, item) => ({\n        [RSAA]: {\n            endpoint: id !== null ? `${appRoot}${uri}/${id}` : `${appRoot}${uri}`,\n            method: 'PUT',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n            types: [\n                rsaaTypes.requestUpdate(actionTypes, actionTypeRoot),\n                rsaaTypes.receiveUpdated(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.putByHref = (href, item) => ({\n        [RSAA]: {\n            endpoint: href,\n            method: 'PUT',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n            types: [\n                rsaaTypes.requestUpdate(actionTypes, actionTypeRoot),\n                rsaaTypes.receiveUpdated(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.patch = (id, item) => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${id}`,\n            method: 'PATCH',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n            types: [\n                rsaaTypes.requestPatch(actionTypes, actionTypeRoot),\n                rsaaTypes.receivePatch(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.postByHref = (href, body = '') => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${href}`,\n            method: 'POST',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: accept ?? 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body),\n            types: [\n                rsaaTypes.requestPost(actionTypes, actionTypeRoot),\n                rsaaTypes.receivePost(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.delete = (id, item) => ({\n        [RSAA]: {\n            endpoint: id !== null ? `${appRoot}${uri}/${id}` : `${appRoot}${uri}`,\n            method: 'DELETE',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: item ? JSON.stringify(item) : null,\n            types: [\n                rsaaTypes.requestDelete(actionTypes, actionTypeRoot),\n                rsaaTypes.receiveDeleted(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n\n    this.reset = () => ({\n        type: actionTypes[`RESET_${actionTypeRoot}`],\n        payload: {}\n    });\n\n    this.setEditStatus = editStatus => ({\n        type: actionTypes[`SET_${actionTypeRoot}_EDIT_STATUS`],\n        payload: editStatus\n    });\n\n    this.clearErrorsForItem = () => ({\n        type: actionTypes[`CLEAR_${actionTypeRoot}_ERRORS`],\n        payload: { item: itemName }\n    });\n\n    this.create = () => ({\n        type: actionTypes[`REQUEST_CREATE_${actionTypeRoot}`],\n        payload: {}\n    });\n\n    this.setSnackbarVisible = visible => {\n        if (visible === true) {\n            return {\n                type: actionTypes[`SHOW_${actionTypeRoot}_SNACKBAR`],\n                payload: {}\n            };\n        }\n        return {\n            type: actionTypes[`HIDE_${actionTypeRoot}_SNACKBAR`],\n            payload: {}\n        };\n    };\n\n    this.clearItem = () => ({\n        type: actionTypes[`CLEAR_${actionTypeRoot}_DATA`],\n        payload: {}\n    });\n\n    this.fetchState = () => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/application-state`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/vnd.linn.application-state+json;version=1'\n            },\n            types: [\n                rsaaTypes.requestedState(actionTypes, actionTypeRoot),\n                rsaaTypes.receivedState(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n}\n","import { RSAA } from 'redux-api-middleware';\nimport * as rsaaTypes from './rsaaTypes';\n\nexport default function StateApiActions(\n    itemName,\n    actionTypeRoot,\n    uri,\n    actionTypes,\n    appRoot,\n    uriPath\n) {\n    this.fetchState = () => ({\n        [RSAA]: {\n            endpoint: `${appRoot}${uri}/${uriPath}`,\n            method: 'GET',\n            options: { requiresAuth: true },\n            headers: {\n                Accept: 'application/vnd.linn.application-state+json;version=1'\n            },\n            types: [\n                rsaaTypes.requestedState(actionTypes, actionTypeRoot),\n                rsaaTypes.receivedState(actionTypes, actionTypeRoot, itemName),\n                rsaaTypes.error(actionTypes, actionTypeRoot, itemName)\n            ]\n        }\n    });\n}\n","ï»¿export const REQUEST_MENU = 'REQUEST_MENU';\nexport const RECEIVE_MENU = 'RECEIVE_MENU';\n\nexport const REQUEST_NEWS = 'REQUEST_NEWS';\nexport const RECEIVE_NEWS = 'RECEIVE_NEWS';\n\nexport const MARK_NOTIFICATION_SEEN = 'MARK_NOTIFICATION_SEEN';\n\nexport const CLEAR_ITEM_ERRORS = 'CLEAR_ITEM_ERRORS';\n\nexport const FETCH_ERROR = 'FETCH_ERROR';\n\nexport const receiveTypes = root => [\n    `RECEIVE_${root}`,\n    `RECEIVE_NEW_${root}`,\n    `RECEIVE_UPDATED_${root}`\n];\n","import { RSAA } from 'redux-api-middleware';\nimport * as actionTypes from './index';\n\nconst fetchNews = (_, root) => ({\n    [RSAA]: {\n        endpoint: `${root}/notifications`,\n        method: 'GET',\n        options: { requiresAuth: false },\n        headers: {\n            Accept: 'application/json'\n        },\n        types: [\n            {\n                type: actionTypes.REQUEST_NEWS,\n                payload: {}\n            },\n            {\n                type: actionTypes.RECEIVE_NEWS,\n                payload: async (action, state, res) => ({ news: await res.json(), item: 'news' })\n            },\n            {\n                type: actionTypes.FETCH_ERROR,\n                payload: (action, state, res) =>\n                    res ? `Report - ${res.status} ${res.statusText}` : `Network request failed`\n            }\n        ]\n    }\n});\n\nexport default fetchNews;\n","const markNotificationSeen = e => ({\n    type: 'MARK_NOTIFICATION_SEEN',\n    title: e.title\n});\n\nexport default markNotificationSeen;\n","import { RSAA } from 'redux-api-middleware';\nimport * as actionTypes from './index';\n\nconst fetchMenu = (_, root) => ({\n    [RSAA]: {\n        endpoint: `${root}/intranet/menu-no-auth`,\n        method: 'GET',\n        options: { requiresAuth: false },\n        headers: {\n            Accept: 'application/json'\n        },\n        types: [\n            {\n                type: actionTypes.REQUEST_MENU,\n                payload: {}\n            },\n            {\n                type: actionTypes.RECEIVE_MENU,\n                payload: async (action, state, res) => ({ menu: await res.json(), item: 'menu' })\n            },\n            {\n                type: actionTypes.FETCH_ERROR,\n                payload: (action, state, res) =>\n                    res ? `Report - ${res.status} ${res.statusText}` : `Network request failed`\n            }\n        ]\n    }\n});\n\nexport default fetchMenu;\n","// todo - could move code that is both react and redux agnostic to its own package\nconst utilities = {\n    getHref: (itemWithLinks, rel) => {\n        if (itemWithLinks && itemWithLinks.links && itemWithLinks.links.length > 0) {\n            const link = itemWithLinks.links.find(l => l.rel === rel);\n\n            return link ? link.href : null;\n        }\n\n        return null;\n    },\n\n    getSelfHref: itemWithLinks => utilities.getHref(itemWithLinks, 'self'),\n\n    sortList: list =>\n        list.slice().sort((a, b) => {\n            if (a < b) {\n                return -1;\n            }\n            if (a > b) {\n                return 1;\n            }\n            return 0;\n        }),\n    sortEntityList: (list, property) =>\n        list.slice().sort((a, b) => {\n            if (a[property] < b[property]) {\n                return -1;\n            }\n            if (a[property] > b[property]) {\n                return 1;\n            }\n            return 0;\n        })\n};\n\nexport default utilities;\n","ï»¿import utilities from '../../utilities/index';\n\nexport default function (\n    itemRoot,\n    actionTypes,\n    defaultState = { loading: false, searchLoading: false, items: [], searchItems: [] },\n    listFieldName = null\n) {\n    const makeItem = item => ({ ...item, href: utilities.getSelfHref(item) });\n\n    const getItems = response => {\n        if (response && listFieldName) {\n            return response[listFieldName].map(i => makeItem(i));\n        }\n        if (response) {\n            return response.map(i => makeItem(i));\n        }\n\n        return response;\n    };\n\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case actionTypes[`REQUEST_APPLICATION_STATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    applicationState: { loading: true }\n                };\n            case actionTypes[`RECEIVE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    items: getItems(action.payload.data)\n                };\n            case actionTypes[`RECEIVE_APPLICATION_STATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    applicationState: {\n                        links: action.payload.data ? action.payload.data.links : [],\n                        loading: false\n                    }\n                };\n            case actionTypes[`REQUEST_SEARCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    searchLoading: true,\n                    searchItems: []\n                };\n            case actionTypes[`RECEIVE_SEARCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    searchLoading: false,\n                    searchItems: getItems(action.payload.data)\n                };\n            case actionTypes[`CLEAR_SEARCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    searchLoading: false,\n                    searchItems: []\n                };\n            case actionTypes[`CLEAR_${itemRoot}_DATA`]:\n                return defaultState;\n            case actionTypes[`FETCH_${itemRoot}_ERROR`]:\n                return {\n                    ...state,\n                    loading: false\n                };\n            case actionTypes[`REQUEST_UPDATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case actionTypes[`RECEIVE_UPDATED_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    items: action.payload.data,\n                    snackbarVisible: true\n                };\n            case actionTypes[`SHOW_${itemRoot}_SNACKBAR`]:\n                return {\n                    ...state,\n                    snackbarVisible: true\n                };\n            case actionTypes[`HIDE_${itemRoot}_SNACKBAR`]:\n                return {\n                    ...state,\n                    snackbarVisible: false\n                };\n            case actionTypes[`REQUEST_POST_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n\n            case actionTypes[`RECEIVE_POST_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    items: action.payload.data,\n                    snackbarVisible: true\n                };\n            default:\n        }\n\n        return state;\n    };\n}\n","ï»¿import utilities from '../../utilities/index';\n\nexport default function (\n    itemRoot,\n    actionTypes,\n    defaultState = { loading: false, searchLoading: false, items: [], searchItems: [], links: [] }\n) {\n    const makeItem = item => ({ ...item, href: utilities.getSelfHref(item) });\n\n    const getItems = items => {\n        if (items) {\n            return items.map(i => makeItem(i));\n        }\n\n        return items;\n    };\n\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case actionTypes[`RECEIVE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    items: getItems(action.payload.data.responseData),\n                    links: action.payload.data.links\n                };\n            case actionTypes[`REQUEST_SEARCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    searchLoading: true,\n                    searchItems: []\n                };\n            case actionTypes[`RECEIVE_SEARCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    searchLoading: false,\n                    searchItems: getItems(action.payload.data.responseData),\n                    links: action.payload.data.links\n                };\n            case actionTypes[`CLEAR_SEARCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    searchLoading: false,\n                    searchItems: []\n                };\n            case actionTypes[`CLEAR_${itemRoot}_DATA`]:\n                return defaultState;\n            case actionTypes[`FETCH_${itemRoot}_ERROR`]:\n                return {\n                    ...state,\n                    loading: false\n                };\n            default:\n        }\n\n        return state;\n    };\n}\n","ï»¿export default function (\n    itemRoot,\n    actionTypes,\n    defaultState = { working: false, messageText: '', messageVisible: false },\n    successMessage = 'Completed successfully'\n) {\n    const getMessage = payload => {\n        if (payload.data && payload.data.message) {\n            return payload.data.message;\n        }\n\n        return successMessage;\n    };\n\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_${itemRoot}`]:\n                return {\n                    ...state,\n                    working: true,\n                    data: null\n                };\n\n            case actionTypes[`RECEIVE_${itemRoot}`]:\n                return {\n                    ...state,\n                    working: false,\n                    messageText: getMessage(action.payload),\n                    messageVisible: true,\n                    data: action.payload.data\n                };\n\n            case actionTypes[`SHOW_${itemRoot}_MESSAGE`]:\n                return {\n                    ...state,\n                    messageVisible: true\n                };\n\n            case actionTypes[`HIDE_${itemRoot}_MESSAGE`]:\n                return {\n                    ...state,\n                    messageVisible: false\n                };\n\n            case actionTypes[`CLEAR_${itemRoot}_DATA`]:\n                return {\n                    ...state,\n                    working: false,\n                    messageText: successMessage,\n                    messageVisible: false,\n                    data: null\n                };\n\n            case actionTypes[`FETCH_${itemRoot}_ERROR`]:\n                return {\n                    ...state,\n                    working: false\n                };\n\n            default:\n        }\n\n        return state;\n    };\n}\n","ï»¿export default function (\n    itemRoot,\n    actionTypes,\n    defaultState = { loading: false, item: null, editStatus: 'view', snackbarVisible: false }\n) {\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_ADD_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true,\n                    editStatus: 'create'\n                };\n            case actionTypes[`REQUEST_CREATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: null,\n                    editStatus: 'create'\n                };\n            case actionTypes[`REQUEST_${itemRoot}`]:\n                return {\n                    ...state,\n                    item: null,\n                    loading: true,\n                    editStatus: 'view'\n                };\n\n            case actionTypes[`REQUEST_APPLICATION_STATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    applicationState: { loading: true }\n                };\n\n            case actionTypes[`REQUEST_UPDATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n\n            case actionTypes[`REQUEST_PATCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n\n            case actionTypes[`REQUEST_DELETE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n\n            case actionTypes[`FETCH_${itemRoot}_ERROR`]:\n                return {\n                    ...state,\n                    loading: false\n                };\n\n            case actionTypes[`SET_${itemRoot}_EDIT_STATUS`]:\n                return {\n                    ...state,\n                    editStatus: action.payload\n                };\n\n            case actionTypes[`RESET_${itemRoot}`]:\n                return {\n                    ...state,\n                    editStatus: 'view'\n                };\n\n            case actionTypes[`RECEIVE_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: action.payload.data,\n                    editStatus: 'view'\n                };\n\n            case actionTypes[`RECEIVE_APPLICATION_STATE_${itemRoot}`]:\n                return {\n                    ...state,\n                    applicationState: {\n                        links: action.payload.data ? action.payload.data.links : [],\n                        loading: false\n                    }\n                };\n\n            case actionTypes[`RECEIVE_UPDATED_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: action.payload.data,\n                    editStatus: 'view',\n                    snackbarVisible: true\n                };\n\n            case actionTypes[`RECEIVE_PATCH_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: action.payload.data,\n                    editStatus: 'view',\n                    snackbarVisible: true\n                };\n\n            case actionTypes[`RECEIVE_DELETED_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: action.payload.data,\n                    editStatus: 'deleted',\n                    snackbarVisible: true\n                };\n\n            case actionTypes[`RECEIVE_NEW_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: action.payload.data,\n                    editStatus: 'view',\n                    snackbarVisible: true\n                };\n\n            case actionTypes[`REQUEST_POST_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: true\n                };\n\n            case actionTypes[`RECEIVE_POST_${itemRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    item: action.payload.data,\n                    editStatus: 'view',\n                    snackbarVisible: true\n                };\n\n            case actionTypes[`SHOW_${itemRoot}_SNACKBAR`]:\n                return {\n                    ...state,\n                    snackbarVisible: true\n                };\n\n            case actionTypes[`HIDE_${itemRoot}_SNACKBAR`]:\n                return {\n                    ...state,\n                    snackbarVisible: false\n                };\n\n            case actionTypes[`CLEAR_${itemRoot}_DATA`]:\n                return defaultState;\n\n            default:\n        }\n\n        return state;\n    };\n}\n","ï»¿export default function (itemRoot, actionTypes, defaultState = {}) {\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_${itemRoot}`]:\n                return {\n                    ...action.payload.options\n                };\n            default:\n                return state;\n        }\n    };\n}\n","ï»¿export default function (reportRoot, actionTypes, defaultState = { loading: false, data: null }) {\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_${reportRoot}`]:\n                return {\n                    ...state,\n                    loading: true,\n                    data: null\n                };\n\n            case actionTypes[`RECEIVE_${reportRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    data: action.payload.data.reportResults\n                        ? action.payload.data.reportResults[0]\n                        : action.payload.data\n                };\n            case actionTypes[`FETCH_${reportRoot}_ERROR`]:\n                return {\n                    ...state,\n                    loading: false\n                };\n            default:\n                return state;\n        }\n    };\n}\n","ï»¿export default function (reportRoot, actionTypes, defaultState = { loading: false, data: null }) {\n    return (state = defaultState, action) => {\n        switch (action.type) {\n            case actionTypes[`REQUEST_${reportRoot}`]:\n                return {\n                    ...state,\n                    loading: true,\n                    data: null\n                };\n\n            case actionTypes[`RECEIVE_${reportRoot}`]:\n                return {\n                    ...state,\n                    loading: false,\n                    data: action.payload.data.reportResults\n                };\n            case actionTypes[`FETCH_${reportRoot}_ERROR`]:\n                return {\n                    ...state,\n                    loading: false\n                };\n\n            default:\n                return state;\n        }\n    };\n}\n","import * as actionTypes from '../../actions/index';\n\nfunction fetchErrorReducerFactory(itemTypes, defaultState = { requestErrors: [], itemErrors: [] }) {\n    return (state = defaultState, action) => {\n        // news and menu errors handling is straightforward, doesn't depend on the itemType\n        if (action.payload) {\n            // Add error to itemErrors array in store when a FETCH_ERROR action occurs\n            if (\n                action.payload.error &&\n                itemTypes[action.payload.error.item] &&\n                action.type === `FETCH_${itemTypes[action.payload.error.item].actionType}_ERROR`\n            ) {\n                return { ...state, itemErrors: [...state.itemErrors, action.payload.error] };\n            }\n\n            // Clear itemError from array when a success action of any kind occurs for that item\n            if (action.payload.item && itemTypes[action.payload.item]) {\n                const itemType = itemTypes[action.payload.item];\n                if (actionTypes.receiveTypes(itemType.actionType).indexOf(action.type) > -1) {\n                    return {\n                        ...state,\n                        itemErrors: state.itemErrors.filter(e => e.item !== action.payload.item)\n                    };\n                }\n\n                // Clear item errors for a chosen item\n                if (action.type === `CLEAR_${itemType.actionType}_ERRORS`) {\n                    return {\n                        ...state,\n                        itemErrors: state.itemErrors.filter(e => e.item !== action.payload.item)\n                    };\n                }\n            }\n        }\n\n        // clear all itemErrors\n        if (action.type === actionTypes.CLEAR_ITEM_ERRORS) {\n            return { ...state, itemErrors: [] };\n        }\n\n        // sometimes the action itself represents an error e.g. CORS rejection, server is down etc.\n        // differentiate these from itemErrors in state by adding to a different requestErrors array\n        if (action.error) {\n            return {\n                ...state,\n                requestErrors: [...state.requestErrors, { ...action.payload, type: action.type }]\n            };\n        }\n\n        // remove request for an action that previously errored if it succeeds this time round\n        if (!action.error) {\n            return {\n                ...state,\n                requestErrors: state.requestErrors.filter(e => e.type !== action.type)\n            };\n        }\n\n        return state;\n    };\n}\n\nexport default fetchErrorReducerFactory;\n","import { REQUEST_MENU, RECEIVE_MENU } from '../actions/index';\n\nfunction menu(state = { loading: false, data: null }, action) {\n    switch (action.type) {\n        case REQUEST_MENU:\n            return {\n                ...state,\n                loading: true,\n                data: null\n            };\n\n        case RECEIVE_MENU:\n            return {\n                ...state,\n                loading: false,\n                data: action.payload.menu\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport default menu;\n","import { REQUEST_NEWS, RECEIVE_NEWS, MARK_NOTIFICATION_SEEN } from '../actions/index';\n\nfunction news(state = { loading: false, seen: [], unseen: [] }, action) {\n    switch (action.type) {\n        case REQUEST_NEWS:\n            return {\n                ...state,\n                loading: true\n            };\n        case RECEIVE_NEWS:\n            return {\n                ...state,\n                loading: false,\n                unseen: action.payload.news.notifications\n                    ? action.payload.news.notifications.filter(n => !localStorage.getItem(n.title))\n                    : [],\n                seen: action.payload.news.notifications\n                    ? action.payload.news.notifications.filter(n => localStorage.getItem(n.title))\n                    : []\n            };\n        case MARK_NOTIFICATION_SEEN:\n            return {\n                ...state,\n                seen: [...state.seen, ...state.unseen.filter(e => e.title === action.title)],\n                unseen: state.unseen.filter(e => e.title !== action.title)\n            };\n        default:\n            return state;\n    }\n}\n\nexport default news;\n","export default function ItemType(item, actionType, uri) {\n    this.item = item;\n    this.actionType = actionType;\n    this.uri = uri;\n}\n","// Actions\nimport makeActionTypes from './src/actions/makeActionTypes';\nimport makeReportActionTypes from './src/actions/makeReportActionTypes';\nimport makeProcessActionTypes from './src/actions/makeProcessActionTypes';\nimport FetchApiActions from './src/actions/FetchApiActions';\nimport ProcessActions from './src/actions/ProcessActions';\nimport ReportActions from './src/actions/ReportActions';\nimport UpdateApiActions from './src/actions/UpdateApiActions';\nimport StateApiActions from './src/actions/StateApiActions';\nimport fetchNews from './src/actions/fetchNews';\nimport markNotificationSeen from './src/actions/markNotificationSeen';\nimport fetchMenu from './src/actions/fetchMenu';\n\n// Reducers\nimport collectionStoreFactory from './src/reducers/reducerFactories/collectionStoreFactory';\nimport collectionWithLinksStoreFactory from './src/reducers/reducerFactories/collectionWithLinksStoreFactory';\nimport processStoreFactory from './src/reducers/reducerFactories/processStoreFactory';\nimport itemStoreFactory from './src/reducers/reducerFactories/itemStoreFactory';\nimport reportOptionsFactory from './src/reducers/reducerFactories/reportOptionsFactory';\nimport reportResultsFactory from './src/reducers/reducerFactories/reportResultsFactory';\nimport reportsResultsFactory from './src/reducers/reducerFactories/reportsResultsFactory';\nimport fetchErrorReducerFactory from './src/reducers/reducerFactories/fetchErrorReducerFactory';\nimport menu from './src/reducers/menu';\nimport news from './src/reducers/news';\n\n// Types\nimport ItemType from './src/types/ItemType';\n\nconst reducers = { menu, news };\n\nfunction hello() {\n    return 'Hello from linn-redux-utils!';\n}\n\nexport {\n    // Actions\n    makeActionTypes,\n    makeReportActionTypes,\n    makeProcessActionTypes,\n    FetchApiActions,\n    ProcessActions,\n    ReportActions,\n    UpdateApiActions,\n    StateApiActions,\n    fetchNews,\n    markNotificationSeen,\n    fetchMenu,\n\n    // Reducers\n    collectionStoreFactory,\n    collectionWithLinksStoreFactory,\n    processStoreFactory,\n    itemStoreFactory,\n    reportOptionsFactory,\n    reportResultsFactory,\n    reportsResultsFactory,\n    fetchErrorReducerFactory,\n    menu,\n    news,\n    reducers,\n\n    // Types\n\n    ItemType,\n    // Test\n    hello\n};\n"],"names":["makeActionTypes","entityType","makeAll","makeDelete","types","makeReportActionTypes","makeProcessActionTypes","successPayload","itemName","async","action","state","res","data","json","item","requested","actionTypes","actionTypeRoot","type","payload","requestedState","requestAdd","requestUpdate","requestDelete","receiveUpdated","received","receivedState","receiveAdded","receivedProcess","receiveDeleted","requestSearch","requestReport","options","receiveSearch","requestPost","receivePost","requestPatch","receivePatch","error","status","statusText","details","FetchApiActions","uri","appRoot","accept","this","fetch","RSAA","endpoint","method","requiresAuth","headers","Accept","rsaaTypes.requested","rsaaTypes.received","rsaaTypes.error","fetchById","id","fetchByPath","path","fetchPage","pageNumber","rowsPerPage","requires","fetchSortedPage","sortBy","asc","search","searchTerm","rsaaTypes.requestSearch","rsaaTypes.receiveSearch","searchWithOptions","clearSearch","clearItems","fetchState","rsaaTypes.requestedState","rsaaTypes.receivedState","ProcessActions","contentType","requestProcessStart","body","URLSearchParams","toString","makeEndpoint","JSON","stringify","rsaaTypes.receivedProcess","setMessageVisible","visible","clearErrorsForItem","clearProcessData","ReportActions","reportName","fetchReport","rsaaTypes.requestReport","UpdateApiActions","fetchByHref","href","fetchByQueryString","queryString","add","rsaaTypes.requestAdd","rsaaTypes.receiveAdded","update","rsaaTypes.requestUpdate","rsaaTypes.receiveUpdated","putByHref","patch","rsaaTypes.requestPatch","rsaaTypes.receivePatch","postByHref","rsaaTypes.requestPost","rsaaTypes.receivePost","delete","rsaaTypes.requestDelete","rsaaTypes.receiveDeleted","reset","setEditStatus","editStatus","create","setSnackbarVisible","clearItem","StateApiActions","uriPath","REQUEST_MENU","RECEIVE_MENU","REQUEST_NEWS","RECEIVE_NEWS","FETCH_ERROR","fetchNews","_","root","actionTypes.REQUEST_NEWS","actionTypes.RECEIVE_NEWS","news","actionTypes.FETCH_ERROR","markNotificationSeen","e","title","fetchMenu","actionTypes.REQUEST_MENU","actionTypes.RECEIVE_MENU","menu","utilities","getHref","itemWithLinks","rel","links","length","link","find","l","getSelfHref","sortList","list","slice","sort","a","b","sortEntityList","property","collectionStoreFactory","itemRoot","defaultState","loading","searchLoading","items","searchItems","listFieldName","makeItem","getItems","response","map","i","applicationState","snackbarVisible","collectionWithLinksStoreFactory","responseData","processStoreFactory","working","messageText","messageVisible","successMessage","message","itemStoreFactory","reportOptionsFactory","reportResultsFactory","reportRoot","reportResults","reportsResultsFactory","fetchErrorReducerFactory","itemTypes","requestErrors","itemErrors","actionType","itemType","indexOf","filter","seen","unseen","notifications","n","localStorage","getItem","ItemType","reducers","hello"],"mappings":"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"}